name: CI API POI
env: 
  rgName: ${{ secrets.RESOURCE_GROUP_NAME }}
  rgLocation: ${{ secrets.AZURE_LOCATION }}
  applicationName: AzCon
  repository: azconnect/api-poi
  acrName: ${{ secrets.ACR_NAME }}
  acrLoginServer: ${{ secrets.ACR_LOGIN_SERVER }}
on:
  push:
    branches: [ main ]
    paths:
    - apis/poi/**
  pull_request:
    branches: [ main ]
    paths:
    - apis/poi/**
  
 # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# First we have to create the ACR
jobs:  
  test:
    name: Build and Test App
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.202'
    - name: Add UnitTest
      working-directory: apis/poi/tests/UnitTests
      run: dotnet add package coverlet.msbuild
    
    - name: Restore dependencies
      run: dotnet restore apis/poi/web/*.csproj
    
    - name: dotnet Build
      run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj
    
    - name: Build Unit Test
      run: dotnet build --configuration Release apis/poi/tests/UnitTests/UnitTests.csproj

  acrpush:
    needs: test
    name: Build Container and Push to ACR
    environment: 
      name: dev
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: apis/poi/web

    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}
    - name: Build Image
      working-directory: apis/poi/web/
      run: |
        az acr repository untag -n ${{env.acrName}} --image ${{env.repository}}:latest
        az acr build --image ${{env.repository}}:${{github.run_number}} --registry ${{env.acrName}} --file Dockerfile .
        az acr import -n ${{env.acrName}} --source ${{env.acrLoginServer}}/${{env.repository}}:${{github.run_number}} --image ${{env.repository}}:latest
        
  deploy:
    needs: acrpush
    name: Deploy to Staging slot
    environment: 
      name: dev
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}
    - name: Azure WebApp Deploy
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: api-poi-azcon-dev
        # Enter an existing Slot other than the Production slot
        slot-name: staging
        # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
        images: ${{env.acrLoginServer}}/${{env.repository}}:${{github.run_number}}
        
